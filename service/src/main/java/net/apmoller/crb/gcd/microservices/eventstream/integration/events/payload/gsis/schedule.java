/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class schedule extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5853050855557648555L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"schedule\",\"namespace\":\"net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis\",\"fields\":[{\"name\":\"proformaArrival\",\"type\":\"string\"},{\"name\":\"proformaDeparture\",\"type\":\"string\"},{\"name\":\"scheduledArrival\",\"type\":\"string\"},{\"name\":\"scheduledDeparture\",\"type\":\"string\"}],\"connect.name\":\"emp.maersk.com.schedule\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<schedule> ENCODER =
      new BinaryMessageEncoder<schedule>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<schedule> DECODER =
      new BinaryMessageDecoder<schedule>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<schedule> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<schedule> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<schedule> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<schedule>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this schedule to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a schedule from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a schedule instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static schedule fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence proformaArrival;
  @Deprecated public java.lang.CharSequence proformaDeparture;
  @Deprecated public java.lang.CharSequence scheduledArrival;
  @Deprecated public java.lang.CharSequence scheduledDeparture;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public schedule() {}

  /**
   * All-args constructor.
   * @param proformaArrival The new value for proformaArrival
   * @param proformaDeparture The new value for proformaDeparture
   * @param scheduledArrival The new value for scheduledArrival
   * @param scheduledDeparture The new value for scheduledDeparture
   */
  public schedule(java.lang.CharSequence proformaArrival, java.lang.CharSequence proformaDeparture, java.lang.CharSequence scheduledArrival, java.lang.CharSequence scheduledDeparture) {
    this.proformaArrival = proformaArrival;
    this.proformaDeparture = proformaDeparture;
    this.scheduledArrival = scheduledArrival;
    this.scheduledDeparture = scheduledDeparture;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return proformaArrival;
    case 1: return proformaDeparture;
    case 2: return scheduledArrival;
    case 3: return scheduledDeparture;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: proformaArrival = (java.lang.CharSequence)value$; break;
    case 1: proformaDeparture = (java.lang.CharSequence)value$; break;
    case 2: scheduledArrival = (java.lang.CharSequence)value$; break;
    case 3: scheduledDeparture = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'proformaArrival' field.
   * @return The value of the 'proformaArrival' field.
   */
  public java.lang.CharSequence getProformaArrival() {
    return proformaArrival;
  }


  /**
   * Sets the value of the 'proformaArrival' field.
   * @param value the value to set.
   */
  public void setProformaArrival(java.lang.CharSequence value) {
    this.proformaArrival = value;
  }

  /**
   * Gets the value of the 'proformaDeparture' field.
   * @return The value of the 'proformaDeparture' field.
   */
  public java.lang.CharSequence getProformaDeparture() {
    return proformaDeparture;
  }


  /**
   * Sets the value of the 'proformaDeparture' field.
   * @param value the value to set.
   */
  public void setProformaDeparture(java.lang.CharSequence value) {
    this.proformaDeparture = value;
  }

  /**
   * Gets the value of the 'scheduledArrival' field.
   * @return The value of the 'scheduledArrival' field.
   */
  public java.lang.CharSequence getScheduledArrival() {
    return scheduledArrival;
  }


  /**
   * Sets the value of the 'scheduledArrival' field.
   * @param value the value to set.
   */
  public void setScheduledArrival(java.lang.CharSequence value) {
    this.scheduledArrival = value;
  }

  /**
   * Gets the value of the 'scheduledDeparture' field.
   * @return The value of the 'scheduledDeparture' field.
   */
  public java.lang.CharSequence getScheduledDeparture() {
    return scheduledDeparture;
  }


  /**
   * Sets the value of the 'scheduledDeparture' field.
   * @param value the value to set.
   */
  public void setScheduledDeparture(java.lang.CharSequence value) {
    this.scheduledDeparture = value;
  }

  /**
   * Creates a new schedule RecordBuilder.
   * @return A new schedule RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder newBuilder() {
    return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder();
  }

  /**
   * Creates a new schedule RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new schedule RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder(other);
    }
  }

  /**
   * Creates a new schedule RecordBuilder by copying an existing schedule instance.
   * @param other The existing instance to copy.
   * @return A new schedule RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder(other);
    }
  }

  /**
   * RecordBuilder for schedule instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<schedule>
    implements org.apache.avro.data.RecordBuilder<schedule> {

    private java.lang.CharSequence proformaArrival;
    private java.lang.CharSequence proformaDeparture;
    private java.lang.CharSequence scheduledArrival;
    private java.lang.CharSequence scheduledDeparture;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.proformaArrival)) {
        this.proformaArrival = data().deepCopy(fields()[0].schema(), other.proformaArrival);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.proformaDeparture)) {
        this.proformaDeparture = data().deepCopy(fields()[1].schema(), other.proformaDeparture);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.scheduledArrival)) {
        this.scheduledArrival = data().deepCopy(fields()[2].schema(), other.scheduledArrival);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.scheduledDeparture)) {
        this.scheduledDeparture = data().deepCopy(fields()[3].schema(), other.scheduledDeparture);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing schedule instance
     * @param other The existing instance to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.proformaArrival)) {
        this.proformaArrival = data().deepCopy(fields()[0].schema(), other.proformaArrival);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.proformaDeparture)) {
        this.proformaDeparture = data().deepCopy(fields()[1].schema(), other.proformaDeparture);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.scheduledArrival)) {
        this.scheduledArrival = data().deepCopy(fields()[2].schema(), other.scheduledArrival);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.scheduledDeparture)) {
        this.scheduledDeparture = data().deepCopy(fields()[3].schema(), other.scheduledDeparture);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'proformaArrival' field.
      * @return The value.
      */
    public java.lang.CharSequence getProformaArrival() {
      return proformaArrival;
    }


    /**
      * Sets the value of the 'proformaArrival' field.
      * @param value The value of 'proformaArrival'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder setProformaArrival(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.proformaArrival = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'proformaArrival' field has been set.
      * @return True if the 'proformaArrival' field has been set, false otherwise.
      */
    public boolean hasProformaArrival() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'proformaArrival' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder clearProformaArrival() {
      proformaArrival = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'proformaDeparture' field.
      * @return The value.
      */
    public java.lang.CharSequence getProformaDeparture() {
      return proformaDeparture;
    }


    /**
      * Sets the value of the 'proformaDeparture' field.
      * @param value The value of 'proformaDeparture'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder setProformaDeparture(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.proformaDeparture = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'proformaDeparture' field has been set.
      * @return True if the 'proformaDeparture' field has been set, false otherwise.
      */
    public boolean hasProformaDeparture() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'proformaDeparture' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder clearProformaDeparture() {
      proformaDeparture = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'scheduledArrival' field.
      * @return The value.
      */
    public java.lang.CharSequence getScheduledArrival() {
      return scheduledArrival;
    }


    /**
      * Sets the value of the 'scheduledArrival' field.
      * @param value The value of 'scheduledArrival'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder setScheduledArrival(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.scheduledArrival = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'scheduledArrival' field has been set.
      * @return True if the 'scheduledArrival' field has been set, false otherwise.
      */
    public boolean hasScheduledArrival() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'scheduledArrival' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder clearScheduledArrival() {
      scheduledArrival = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'scheduledDeparture' field.
      * @return The value.
      */
    public java.lang.CharSequence getScheduledDeparture() {
      return scheduledDeparture;
    }


    /**
      * Sets the value of the 'scheduledDeparture' field.
      * @param value The value of 'scheduledDeparture'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder setScheduledDeparture(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.scheduledDeparture = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'scheduledDeparture' field has been set.
      * @return True if the 'scheduledDeparture' field has been set, false otherwise.
      */
    public boolean hasScheduledDeparture() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'scheduledDeparture' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.schedule.Builder clearScheduledDeparture() {
      scheduledDeparture = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public schedule build() {
      try {
        schedule record = new schedule();
        record.proformaArrival = fieldSetFlags()[0] ? this.proformaArrival : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.proformaDeparture = fieldSetFlags()[1] ? this.proformaDeparture : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.scheduledArrival = fieldSetFlags()[2] ? this.scheduledArrival : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.scheduledDeparture = fieldSetFlags()[3] ? this.scheduledDeparture : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<schedule>
    WRITER$ = (org.apache.avro.io.DatumWriter<schedule>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<schedule>
    READER$ = (org.apache.avro.io.DatumReader<schedule>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.proformaArrival);

    out.writeString(this.proformaDeparture);

    out.writeString(this.scheduledArrival);

    out.writeString(this.scheduledDeparture);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.proformaArrival = in.readString(this.proformaArrival instanceof Utf8 ? (Utf8)this.proformaArrival : null);

      this.proformaDeparture = in.readString(this.proformaDeparture instanceof Utf8 ? (Utf8)this.proformaDeparture : null);

      this.scheduledArrival = in.readString(this.scheduledArrival instanceof Utf8 ? (Utf8)this.scheduledArrival : null);

      this.scheduledDeparture = in.readString(this.scheduledDeparture instanceof Utf8 ? (Utf8)this.scheduledDeparture : null);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.proformaArrival = in.readString(this.proformaArrival instanceof Utf8 ? (Utf8)this.proformaArrival : null);
          break;

        case 1:
          this.proformaDeparture = in.readString(this.proformaDeparture instanceof Utf8 ? (Utf8)this.proformaDeparture : null);
          break;

        case 2:
          this.scheduledArrival = in.readString(this.scheduledArrival instanceof Utf8 ? (Utf8)this.scheduledArrival : null);
          break;

        case 3:
          this.scheduledDeparture = in.readString(this.scheduledDeparture instanceof Utf8 ? (Utf8)this.scheduledDeparture : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










