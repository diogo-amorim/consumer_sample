/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoadStatus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6693754095658023541L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoadStatus\",\"namespace\":\"net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus\",\"fields\":[{\"name\":\"transportDocumentNumber\",\"type\":\"string\"},{\"name\":\"vesselCode\",\"type\":\"string\"},{\"name\":\"arrivalVoyageNumber\",\"type\":\"string\"},{\"name\":\"complianceReceiverPort\",\"type\":\"string\"},{\"name\":\"mrnCustomsNumber\",\"type\":\"string\"},{\"name\":\"departureVoyageNumber\",\"type\":\"string\"},{\"name\":\"loadPort\",\"type\":\"string\"},{\"name\":\"dischargePort\",\"type\":\"string\"},{\"name\":\"complianceStatus\",\"type\":\"string\"},{\"name\":\"complianceLoadStatus\",\"type\":\"string\"},{\"name\":\"customsResponseReason\",\"type\":\"string\"},{\"name\":\"sentTimeStamp\",\"type\":\"string\"},{\"name\":\"entryPortEta\",\"type\":\"string\"},{\"name\":\"containerNumbers\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LoadStatus> ENCODER =
      new BinaryMessageEncoder<LoadStatus>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoadStatus> DECODER =
      new BinaryMessageDecoder<LoadStatus>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoadStatus> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoadStatus> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoadStatus> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LoadStatus>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoadStatus to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoadStatus from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoadStatus instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoadStatus fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence transportDocumentNumber;
  @Deprecated public java.lang.CharSequence vesselCode;
  @Deprecated public java.lang.CharSequence arrivalVoyageNumber;
  @Deprecated public java.lang.CharSequence complianceReceiverPort;
  @Deprecated public java.lang.CharSequence mrnCustomsNumber;
  @Deprecated public java.lang.CharSequence departureVoyageNumber;
  @Deprecated public java.lang.CharSequence loadPort;
  @Deprecated public java.lang.CharSequence dischargePort;
  @Deprecated public java.lang.CharSequence complianceStatus;
  @Deprecated public java.lang.CharSequence complianceLoadStatus;
  @Deprecated public java.lang.CharSequence customsResponseReason;
  @Deprecated public java.lang.CharSequence sentTimeStamp;
  @Deprecated public java.lang.CharSequence entryPortEta;
  @Deprecated public java.util.List<java.lang.CharSequence> containerNumbers;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoadStatus() {}

  /**
   * All-args constructor.
   * @param transportDocumentNumber The new value for transportDocumentNumber
   * @param vesselCode The new value for vesselCode
   * @param arrivalVoyageNumber The new value for arrivalVoyageNumber
   * @param complianceReceiverPort The new value for complianceReceiverPort
   * @param mrnCustomsNumber The new value for mrnCustomsNumber
   * @param departureVoyageNumber The new value for departureVoyageNumber
   * @param loadPort The new value for loadPort
   * @param dischargePort The new value for dischargePort
   * @param complianceStatus The new value for complianceStatus
   * @param complianceLoadStatus The new value for complianceLoadStatus
   * @param customsResponseReason The new value for customsResponseReason
   * @param sentTimeStamp The new value for sentTimeStamp
   * @param entryPortEta The new value for entryPortEta
   * @param containerNumbers The new value for containerNumbers
   */
  public LoadStatus(java.lang.CharSequence transportDocumentNumber, java.lang.CharSequence vesselCode, java.lang.CharSequence arrivalVoyageNumber, java.lang.CharSequence complianceReceiverPort, java.lang.CharSequence mrnCustomsNumber, java.lang.CharSequence departureVoyageNumber, java.lang.CharSequence loadPort, java.lang.CharSequence dischargePort, java.lang.CharSequence complianceStatus, java.lang.CharSequence complianceLoadStatus, java.lang.CharSequence customsResponseReason, java.lang.CharSequence sentTimeStamp, java.lang.CharSequence entryPortEta, java.util.List<java.lang.CharSequence> containerNumbers) {
    this.transportDocumentNumber = transportDocumentNumber;
    this.vesselCode = vesselCode;
    this.arrivalVoyageNumber = arrivalVoyageNumber;
    this.complianceReceiverPort = complianceReceiverPort;
    this.mrnCustomsNumber = mrnCustomsNumber;
    this.departureVoyageNumber = departureVoyageNumber;
    this.loadPort = loadPort;
    this.dischargePort = dischargePort;
    this.complianceStatus = complianceStatus;
    this.complianceLoadStatus = complianceLoadStatus;
    this.customsResponseReason = customsResponseReason;
    this.sentTimeStamp = sentTimeStamp;
    this.entryPortEta = entryPortEta;
    this.containerNumbers = containerNumbers;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return transportDocumentNumber;
    case 1: return vesselCode;
    case 2: return arrivalVoyageNumber;
    case 3: return complianceReceiverPort;
    case 4: return mrnCustomsNumber;
    case 5: return departureVoyageNumber;
    case 6: return loadPort;
    case 7: return dischargePort;
    case 8: return complianceStatus;
    case 9: return complianceLoadStatus;
    case 10: return customsResponseReason;
    case 11: return sentTimeStamp;
    case 12: return entryPortEta;
    case 13: return containerNumbers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: transportDocumentNumber = (java.lang.CharSequence)value$; break;
    case 1: vesselCode = (java.lang.CharSequence)value$; break;
    case 2: arrivalVoyageNumber = (java.lang.CharSequence)value$; break;
    case 3: complianceReceiverPort = (java.lang.CharSequence)value$; break;
    case 4: mrnCustomsNumber = (java.lang.CharSequence)value$; break;
    case 5: departureVoyageNumber = (java.lang.CharSequence)value$; break;
    case 6: loadPort = (java.lang.CharSequence)value$; break;
    case 7: dischargePort = (java.lang.CharSequence)value$; break;
    case 8: complianceStatus = (java.lang.CharSequence)value$; break;
    case 9: complianceLoadStatus = (java.lang.CharSequence)value$; break;
    case 10: customsResponseReason = (java.lang.CharSequence)value$; break;
    case 11: sentTimeStamp = (java.lang.CharSequence)value$; break;
    case 12: entryPortEta = (java.lang.CharSequence)value$; break;
    case 13: containerNumbers = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'transportDocumentNumber' field.
   * @return The value of the 'transportDocumentNumber' field.
   */
  public java.lang.CharSequence getTransportDocumentNumber() {
    return transportDocumentNumber;
  }


  /**
   * Sets the value of the 'transportDocumentNumber' field.
   * @param value the value to set.
   */
  public void setTransportDocumentNumber(java.lang.CharSequence value) {
    this.transportDocumentNumber = value;
  }

  /**
   * Gets the value of the 'vesselCode' field.
   * @return The value of the 'vesselCode' field.
   */
  public java.lang.CharSequence getVesselCode() {
    return vesselCode;
  }


  /**
   * Sets the value of the 'vesselCode' field.
   * @param value the value to set.
   */
  public void setVesselCode(java.lang.CharSequence value) {
    this.vesselCode = value;
  }

  /**
   * Gets the value of the 'arrivalVoyageNumber' field.
   * @return The value of the 'arrivalVoyageNumber' field.
   */
  public java.lang.CharSequence getArrivalVoyageNumber() {
    return arrivalVoyageNumber;
  }


  /**
   * Sets the value of the 'arrivalVoyageNumber' field.
   * @param value the value to set.
   */
  public void setArrivalVoyageNumber(java.lang.CharSequence value) {
    this.arrivalVoyageNumber = value;
  }

  /**
   * Gets the value of the 'complianceReceiverPort' field.
   * @return The value of the 'complianceReceiverPort' field.
   */
  public java.lang.CharSequence getComplianceReceiverPort() {
    return complianceReceiverPort;
  }


  /**
   * Sets the value of the 'complianceReceiverPort' field.
   * @param value the value to set.
   */
  public void setComplianceReceiverPort(java.lang.CharSequence value) {
    this.complianceReceiverPort = value;
  }

  /**
   * Gets the value of the 'mrnCustomsNumber' field.
   * @return The value of the 'mrnCustomsNumber' field.
   */
  public java.lang.CharSequence getMrnCustomsNumber() {
    return mrnCustomsNumber;
  }


  /**
   * Sets the value of the 'mrnCustomsNumber' field.
   * @param value the value to set.
   */
  public void setMrnCustomsNumber(java.lang.CharSequence value) {
    this.mrnCustomsNumber = value;
  }

  /**
   * Gets the value of the 'departureVoyageNumber' field.
   * @return The value of the 'departureVoyageNumber' field.
   */
  public java.lang.CharSequence getDepartureVoyageNumber() {
    return departureVoyageNumber;
  }


  /**
   * Sets the value of the 'departureVoyageNumber' field.
   * @param value the value to set.
   */
  public void setDepartureVoyageNumber(java.lang.CharSequence value) {
    this.departureVoyageNumber = value;
  }

  /**
   * Gets the value of the 'loadPort' field.
   * @return The value of the 'loadPort' field.
   */
  public java.lang.CharSequence getLoadPort() {
    return loadPort;
  }


  /**
   * Sets the value of the 'loadPort' field.
   * @param value the value to set.
   */
  public void setLoadPort(java.lang.CharSequence value) {
    this.loadPort = value;
  }

  /**
   * Gets the value of the 'dischargePort' field.
   * @return The value of the 'dischargePort' field.
   */
  public java.lang.CharSequence getDischargePort() {
    return dischargePort;
  }


  /**
   * Sets the value of the 'dischargePort' field.
   * @param value the value to set.
   */
  public void setDischargePort(java.lang.CharSequence value) {
    this.dischargePort = value;
  }

  /**
   * Gets the value of the 'complianceStatus' field.
   * @return The value of the 'complianceStatus' field.
   */
  public java.lang.CharSequence getComplianceStatus() {
    return complianceStatus;
  }


  /**
   * Sets the value of the 'complianceStatus' field.
   * @param value the value to set.
   */
  public void setComplianceStatus(java.lang.CharSequence value) {
    this.complianceStatus = value;
  }

  /**
   * Gets the value of the 'complianceLoadStatus' field.
   * @return The value of the 'complianceLoadStatus' field.
   */
  public java.lang.CharSequence getComplianceLoadStatus() {
    return complianceLoadStatus;
  }


  /**
   * Sets the value of the 'complianceLoadStatus' field.
   * @param value the value to set.
   */
  public void setComplianceLoadStatus(java.lang.CharSequence value) {
    this.complianceLoadStatus = value;
  }

  /**
   * Gets the value of the 'customsResponseReason' field.
   * @return The value of the 'customsResponseReason' field.
   */
  public java.lang.CharSequence getCustomsResponseReason() {
    return customsResponseReason;
  }


  /**
   * Sets the value of the 'customsResponseReason' field.
   * @param value the value to set.
   */
  public void setCustomsResponseReason(java.lang.CharSequence value) {
    this.customsResponseReason = value;
  }

  /**
   * Gets the value of the 'sentTimeStamp' field.
   * @return The value of the 'sentTimeStamp' field.
   */
  public java.lang.CharSequence getSentTimeStamp() {
    return sentTimeStamp;
  }


  /**
   * Sets the value of the 'sentTimeStamp' field.
   * @param value the value to set.
   */
  public void setSentTimeStamp(java.lang.CharSequence value) {
    this.sentTimeStamp = value;
  }

  /**
   * Gets the value of the 'entryPortEta' field.
   * @return The value of the 'entryPortEta' field.
   */
  public java.lang.CharSequence getEntryPortEta() {
    return entryPortEta;
  }


  /**
   * Sets the value of the 'entryPortEta' field.
   * @param value the value to set.
   */
  public void setEntryPortEta(java.lang.CharSequence value) {
    this.entryPortEta = value;
  }

  /**
   * Gets the value of the 'containerNumbers' field.
   * @return The value of the 'containerNumbers' field.
   */
  public java.util.List<java.lang.CharSequence> getContainerNumbers() {
    return containerNumbers;
  }


  /**
   * Sets the value of the 'containerNumbers' field.
   * @param value the value to set.
   */
  public void setContainerNumbers(java.util.List<java.lang.CharSequence> value) {
    this.containerNumbers = value;
  }

  /**
   * Creates a new LoadStatus RecordBuilder.
   * @return A new LoadStatus RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder newBuilder() {
    return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder();
  }

  /**
   * Creates a new LoadStatus RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoadStatus RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder(other);
    }
  }

  /**
   * Creates a new LoadStatus RecordBuilder by copying an existing LoadStatus instance.
   * @param other The existing instance to copy.
   * @return A new LoadStatus RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoadStatus instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoadStatus>
    implements org.apache.avro.data.RecordBuilder<LoadStatus> {

    private java.lang.CharSequence transportDocumentNumber;
    private java.lang.CharSequence vesselCode;
    private java.lang.CharSequence arrivalVoyageNumber;
    private java.lang.CharSequence complianceReceiverPort;
    private java.lang.CharSequence mrnCustomsNumber;
    private java.lang.CharSequence departureVoyageNumber;
    private java.lang.CharSequence loadPort;
    private java.lang.CharSequence dischargePort;
    private java.lang.CharSequence complianceStatus;
    private java.lang.CharSequence complianceLoadStatus;
    private java.lang.CharSequence customsResponseReason;
    private java.lang.CharSequence sentTimeStamp;
    private java.lang.CharSequence entryPortEta;
    private java.util.List<java.lang.CharSequence> containerNumbers;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.transportDocumentNumber)) {
        this.transportDocumentNumber = data().deepCopy(fields()[0].schema(), other.transportDocumentNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.vesselCode)) {
        this.vesselCode = data().deepCopy(fields()[1].schema(), other.vesselCode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.arrivalVoyageNumber)) {
        this.arrivalVoyageNumber = data().deepCopy(fields()[2].schema(), other.arrivalVoyageNumber);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.complianceReceiverPort)) {
        this.complianceReceiverPort = data().deepCopy(fields()[3].schema(), other.complianceReceiverPort);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.mrnCustomsNumber)) {
        this.mrnCustomsNumber = data().deepCopy(fields()[4].schema(), other.mrnCustomsNumber);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.departureVoyageNumber)) {
        this.departureVoyageNumber = data().deepCopy(fields()[5].schema(), other.departureVoyageNumber);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.loadPort)) {
        this.loadPort = data().deepCopy(fields()[6].schema(), other.loadPort);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.dischargePort)) {
        this.dischargePort = data().deepCopy(fields()[7].schema(), other.dischargePort);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.complianceStatus)) {
        this.complianceStatus = data().deepCopy(fields()[8].schema(), other.complianceStatus);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.complianceLoadStatus)) {
        this.complianceLoadStatus = data().deepCopy(fields()[9].schema(), other.complianceLoadStatus);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.customsResponseReason)) {
        this.customsResponseReason = data().deepCopy(fields()[10].schema(), other.customsResponseReason);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.sentTimeStamp)) {
        this.sentTimeStamp = data().deepCopy(fields()[11].schema(), other.sentTimeStamp);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.entryPortEta)) {
        this.entryPortEta = data().deepCopy(fields()[12].schema(), other.entryPortEta);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.containerNumbers)) {
        this.containerNumbers = data().deepCopy(fields()[13].schema(), other.containerNumbers);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing LoadStatus instance
     * @param other The existing instance to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.transportDocumentNumber)) {
        this.transportDocumentNumber = data().deepCopy(fields()[0].schema(), other.transportDocumentNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vesselCode)) {
        this.vesselCode = data().deepCopy(fields()[1].schema(), other.vesselCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.arrivalVoyageNumber)) {
        this.arrivalVoyageNumber = data().deepCopy(fields()[2].schema(), other.arrivalVoyageNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.complianceReceiverPort)) {
        this.complianceReceiverPort = data().deepCopy(fields()[3].schema(), other.complianceReceiverPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.mrnCustomsNumber)) {
        this.mrnCustomsNumber = data().deepCopy(fields()[4].schema(), other.mrnCustomsNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.departureVoyageNumber)) {
        this.departureVoyageNumber = data().deepCopy(fields()[5].schema(), other.departureVoyageNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.loadPort)) {
        this.loadPort = data().deepCopy(fields()[6].schema(), other.loadPort);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.dischargePort)) {
        this.dischargePort = data().deepCopy(fields()[7].schema(), other.dischargePort);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.complianceStatus)) {
        this.complianceStatus = data().deepCopy(fields()[8].schema(), other.complianceStatus);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.complianceLoadStatus)) {
        this.complianceLoadStatus = data().deepCopy(fields()[9].schema(), other.complianceLoadStatus);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.customsResponseReason)) {
        this.customsResponseReason = data().deepCopy(fields()[10].schema(), other.customsResponseReason);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sentTimeStamp)) {
        this.sentTimeStamp = data().deepCopy(fields()[11].schema(), other.sentTimeStamp);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.entryPortEta)) {
        this.entryPortEta = data().deepCopy(fields()[12].schema(), other.entryPortEta);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.containerNumbers)) {
        this.containerNumbers = data().deepCopy(fields()[13].schema(), other.containerNumbers);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'transportDocumentNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransportDocumentNumber() {
      return transportDocumentNumber;
    }


    /**
      * Sets the value of the 'transportDocumentNumber' field.
      * @param value The value of 'transportDocumentNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setTransportDocumentNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.transportDocumentNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'transportDocumentNumber' field has been set.
      * @return True if the 'transportDocumentNumber' field has been set, false otherwise.
      */
    public boolean hasTransportDocumentNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'transportDocumentNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearTransportDocumentNumber() {
      transportDocumentNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'vesselCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getVesselCode() {
      return vesselCode;
    }


    /**
      * Sets the value of the 'vesselCode' field.
      * @param value The value of 'vesselCode'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setVesselCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.vesselCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'vesselCode' field has been set.
      * @return True if the 'vesselCode' field has been set, false otherwise.
      */
    public boolean hasVesselCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'vesselCode' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearVesselCode() {
      vesselCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'arrivalVoyageNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getArrivalVoyageNumber() {
      return arrivalVoyageNumber;
    }


    /**
      * Sets the value of the 'arrivalVoyageNumber' field.
      * @param value The value of 'arrivalVoyageNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setArrivalVoyageNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.arrivalVoyageNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'arrivalVoyageNumber' field has been set.
      * @return True if the 'arrivalVoyageNumber' field has been set, false otherwise.
      */
    public boolean hasArrivalVoyageNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'arrivalVoyageNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearArrivalVoyageNumber() {
      arrivalVoyageNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'complianceReceiverPort' field.
      * @return The value.
      */
    public java.lang.CharSequence getComplianceReceiverPort() {
      return complianceReceiverPort;
    }


    /**
      * Sets the value of the 'complianceReceiverPort' field.
      * @param value The value of 'complianceReceiverPort'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setComplianceReceiverPort(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.complianceReceiverPort = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'complianceReceiverPort' field has been set.
      * @return True if the 'complianceReceiverPort' field has been set, false otherwise.
      */
    public boolean hasComplianceReceiverPort() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'complianceReceiverPort' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearComplianceReceiverPort() {
      complianceReceiverPort = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'mrnCustomsNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getMrnCustomsNumber() {
      return mrnCustomsNumber;
    }


    /**
      * Sets the value of the 'mrnCustomsNumber' field.
      * @param value The value of 'mrnCustomsNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setMrnCustomsNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.mrnCustomsNumber = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'mrnCustomsNumber' field has been set.
      * @return True if the 'mrnCustomsNumber' field has been set, false otherwise.
      */
    public boolean hasMrnCustomsNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'mrnCustomsNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearMrnCustomsNumber() {
      mrnCustomsNumber = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'departureVoyageNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepartureVoyageNumber() {
      return departureVoyageNumber;
    }


    /**
      * Sets the value of the 'departureVoyageNumber' field.
      * @param value The value of 'departureVoyageNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setDepartureVoyageNumber(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.departureVoyageNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'departureVoyageNumber' field has been set.
      * @return True if the 'departureVoyageNumber' field has been set, false otherwise.
      */
    public boolean hasDepartureVoyageNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'departureVoyageNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearDepartureVoyageNumber() {
      departureVoyageNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'loadPort' field.
      * @return The value.
      */
    public java.lang.CharSequence getLoadPort() {
      return loadPort;
    }


    /**
      * Sets the value of the 'loadPort' field.
      * @param value The value of 'loadPort'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setLoadPort(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.loadPort = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'loadPort' field has been set.
      * @return True if the 'loadPort' field has been set, false otherwise.
      */
    public boolean hasLoadPort() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'loadPort' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearLoadPort() {
      loadPort = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'dischargePort' field.
      * @return The value.
      */
    public java.lang.CharSequence getDischargePort() {
      return dischargePort;
    }


    /**
      * Sets the value of the 'dischargePort' field.
      * @param value The value of 'dischargePort'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setDischargePort(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.dischargePort = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'dischargePort' field has been set.
      * @return True if the 'dischargePort' field has been set, false otherwise.
      */
    public boolean hasDischargePort() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'dischargePort' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearDischargePort() {
      dischargePort = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'complianceStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getComplianceStatus() {
      return complianceStatus;
    }


    /**
      * Sets the value of the 'complianceStatus' field.
      * @param value The value of 'complianceStatus'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setComplianceStatus(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.complianceStatus = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'complianceStatus' field has been set.
      * @return True if the 'complianceStatus' field has been set, false otherwise.
      */
    public boolean hasComplianceStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'complianceStatus' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearComplianceStatus() {
      complianceStatus = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'complianceLoadStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getComplianceLoadStatus() {
      return complianceLoadStatus;
    }


    /**
      * Sets the value of the 'complianceLoadStatus' field.
      * @param value The value of 'complianceLoadStatus'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setComplianceLoadStatus(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.complianceLoadStatus = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'complianceLoadStatus' field has been set.
      * @return True if the 'complianceLoadStatus' field has been set, false otherwise.
      */
    public boolean hasComplianceLoadStatus() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'complianceLoadStatus' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearComplianceLoadStatus() {
      complianceLoadStatus = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'customsResponseReason' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomsResponseReason() {
      return customsResponseReason;
    }


    /**
      * Sets the value of the 'customsResponseReason' field.
      * @param value The value of 'customsResponseReason'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setCustomsResponseReason(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.customsResponseReason = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'customsResponseReason' field has been set.
      * @return True if the 'customsResponseReason' field has been set, false otherwise.
      */
    public boolean hasCustomsResponseReason() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'customsResponseReason' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearCustomsResponseReason() {
      customsResponseReason = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'sentTimeStamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getSentTimeStamp() {
      return sentTimeStamp;
    }


    /**
      * Sets the value of the 'sentTimeStamp' field.
      * @param value The value of 'sentTimeStamp'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setSentTimeStamp(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.sentTimeStamp = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'sentTimeStamp' field has been set.
      * @return True if the 'sentTimeStamp' field has been set, false otherwise.
      */
    public boolean hasSentTimeStamp() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'sentTimeStamp' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearSentTimeStamp() {
      sentTimeStamp = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'entryPortEta' field.
      * @return The value.
      */
    public java.lang.CharSequence getEntryPortEta() {
      return entryPortEta;
    }


    /**
      * Sets the value of the 'entryPortEta' field.
      * @param value The value of 'entryPortEta'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setEntryPortEta(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.entryPortEta = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'entryPortEta' field has been set.
      * @return True if the 'entryPortEta' field has been set, false otherwise.
      */
    public boolean hasEntryPortEta() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'entryPortEta' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearEntryPortEta() {
      entryPortEta = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'containerNumbers' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getContainerNumbers() {
      return containerNumbers;
    }


    /**
      * Sets the value of the 'containerNumbers' field.
      * @param value The value of 'containerNumbers'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder setContainerNumbers(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[13], value);
      this.containerNumbers = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'containerNumbers' field has been set.
      * @return True if the 'containerNumbers' field has been set, false otherwise.
      */
    public boolean hasContainerNumbers() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'containerNumbers' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.loadstatus.LoadStatus.Builder clearContainerNumbers() {
      containerNumbers = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoadStatus build() {
      try {
        LoadStatus record = new LoadStatus();
        record.transportDocumentNumber = fieldSetFlags()[0] ? this.transportDocumentNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.vesselCode = fieldSetFlags()[1] ? this.vesselCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.arrivalVoyageNumber = fieldSetFlags()[2] ? this.arrivalVoyageNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.complianceReceiverPort = fieldSetFlags()[3] ? this.complianceReceiverPort : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.mrnCustomsNumber = fieldSetFlags()[4] ? this.mrnCustomsNumber : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.departureVoyageNumber = fieldSetFlags()[5] ? this.departureVoyageNumber : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.loadPort = fieldSetFlags()[6] ? this.loadPort : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.dischargePort = fieldSetFlags()[7] ? this.dischargePort : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.complianceStatus = fieldSetFlags()[8] ? this.complianceStatus : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.complianceLoadStatus = fieldSetFlags()[9] ? this.complianceLoadStatus : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.customsResponseReason = fieldSetFlags()[10] ? this.customsResponseReason : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.sentTimeStamp = fieldSetFlags()[11] ? this.sentTimeStamp : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.entryPortEta = fieldSetFlags()[12] ? this.entryPortEta : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.containerNumbers = fieldSetFlags()[13] ? this.containerNumbers : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoadStatus>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoadStatus>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoadStatus>
    READER$ = (org.apache.avro.io.DatumReader<LoadStatus>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.transportDocumentNumber);

    out.writeString(this.vesselCode);

    out.writeString(this.arrivalVoyageNumber);

    out.writeString(this.complianceReceiverPort);

    out.writeString(this.mrnCustomsNumber);

    out.writeString(this.departureVoyageNumber);

    out.writeString(this.loadPort);

    out.writeString(this.dischargePort);

    out.writeString(this.complianceStatus);

    out.writeString(this.complianceLoadStatus);

    out.writeString(this.customsResponseReason);

    out.writeString(this.sentTimeStamp);

    out.writeString(this.entryPortEta);

    long size0 = this.containerNumbers.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.containerNumbers) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.transportDocumentNumber = in.readString(this.transportDocumentNumber instanceof Utf8 ? (Utf8)this.transportDocumentNumber : null);

      this.vesselCode = in.readString(this.vesselCode instanceof Utf8 ? (Utf8)this.vesselCode : null);

      this.arrivalVoyageNumber = in.readString(this.arrivalVoyageNumber instanceof Utf8 ? (Utf8)this.arrivalVoyageNumber : null);

      this.complianceReceiverPort = in.readString(this.complianceReceiverPort instanceof Utf8 ? (Utf8)this.complianceReceiverPort : null);

      this.mrnCustomsNumber = in.readString(this.mrnCustomsNumber instanceof Utf8 ? (Utf8)this.mrnCustomsNumber : null);

      this.departureVoyageNumber = in.readString(this.departureVoyageNumber instanceof Utf8 ? (Utf8)this.departureVoyageNumber : null);

      this.loadPort = in.readString(this.loadPort instanceof Utf8 ? (Utf8)this.loadPort : null);

      this.dischargePort = in.readString(this.dischargePort instanceof Utf8 ? (Utf8)this.dischargePort : null);

      this.complianceStatus = in.readString(this.complianceStatus instanceof Utf8 ? (Utf8)this.complianceStatus : null);

      this.complianceLoadStatus = in.readString(this.complianceLoadStatus instanceof Utf8 ? (Utf8)this.complianceLoadStatus : null);

      this.customsResponseReason = in.readString(this.customsResponseReason instanceof Utf8 ? (Utf8)this.customsResponseReason : null);

      this.sentTimeStamp = in.readString(this.sentTimeStamp instanceof Utf8 ? (Utf8)this.sentTimeStamp : null);

      this.entryPortEta = in.readString(this.entryPortEta instanceof Utf8 ? (Utf8)this.entryPortEta : null);

      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.containerNumbers;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("containerNumbers").schema());
        this.containerNumbers = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 14; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.transportDocumentNumber = in.readString(this.transportDocumentNumber instanceof Utf8 ? (Utf8)this.transportDocumentNumber : null);
          break;

        case 1:
          this.vesselCode = in.readString(this.vesselCode instanceof Utf8 ? (Utf8)this.vesselCode : null);
          break;

        case 2:
          this.arrivalVoyageNumber = in.readString(this.arrivalVoyageNumber instanceof Utf8 ? (Utf8)this.arrivalVoyageNumber : null);
          break;

        case 3:
          this.complianceReceiverPort = in.readString(this.complianceReceiverPort instanceof Utf8 ? (Utf8)this.complianceReceiverPort : null);
          break;

        case 4:
          this.mrnCustomsNumber = in.readString(this.mrnCustomsNumber instanceof Utf8 ? (Utf8)this.mrnCustomsNumber : null);
          break;

        case 5:
          this.departureVoyageNumber = in.readString(this.departureVoyageNumber instanceof Utf8 ? (Utf8)this.departureVoyageNumber : null);
          break;

        case 6:
          this.loadPort = in.readString(this.loadPort instanceof Utf8 ? (Utf8)this.loadPort : null);
          break;

        case 7:
          this.dischargePort = in.readString(this.dischargePort instanceof Utf8 ? (Utf8)this.dischargePort : null);
          break;

        case 8:
          this.complianceStatus = in.readString(this.complianceStatus instanceof Utf8 ? (Utf8)this.complianceStatus : null);
          break;

        case 9:
          this.complianceLoadStatus = in.readString(this.complianceLoadStatus instanceof Utf8 ? (Utf8)this.complianceLoadStatus : null);
          break;

        case 10:
          this.customsResponseReason = in.readString(this.customsResponseReason instanceof Utf8 ? (Utf8)this.customsResponseReason : null);
          break;

        case 11:
          this.sentTimeStamp = in.readString(this.sentTimeStamp instanceof Utf8 ? (Utf8)this.sentTimeStamp : null);
          break;

        case 12:
          this.entryPortEta = in.readString(this.entryPortEta instanceof Utf8 ? (Utf8)this.entryPortEta : null);
          break;

        case 13:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.containerNumbers;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("containerNumbers").schema());
            this.containerNumbers = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










