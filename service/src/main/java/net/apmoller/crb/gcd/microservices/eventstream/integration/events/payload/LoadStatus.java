/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoadStatus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8082355980309858162L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoadStatus\",\"namespace\":\"net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload\",\"fields\":[{\"name\":\"TransportDocumentNumber\",\"type\":\"string\"},{\"name\":\"VesselCode\",\"type\":\"string\"},{\"name\":\"ArrivalVoyageNumber\",\"type\":\"string\"},{\"name\":\"ComplianceReceiverPort\",\"type\":\"string\"},{\"name\":\"MRNCustomsNumber\",\"type\":\"string\"},{\"name\":\"DepartureVoyageNumber\",\"type\":\"string\"},{\"name\":\"DischargePort\",\"type\":\"string\"},{\"name\":\"ComplianceStatus\",\"type\":\"string\"},{\"name\":\"ComplianceLoadStatus\",\"type\":\"string\"},{\"name\":\"CustomsResponseReason\",\"type\":\"string\"},{\"name\":\"SentTimeStamp\",\"type\":\"string\"},{\"name\":\"EntryPortETA\",\"type\":\"string\"}],\"connect.name\":\"emp.maersk.com.LoadStatus\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LoadStatus> ENCODER =
      new BinaryMessageEncoder<LoadStatus>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoadStatus> DECODER =
      new BinaryMessageDecoder<LoadStatus>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoadStatus> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoadStatus> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoadStatus> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LoadStatus>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoadStatus to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoadStatus from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoadStatus instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoadStatus fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence TransportDocumentNumber;
  @Deprecated public java.lang.CharSequence VesselCode;
  @Deprecated public java.lang.CharSequence ArrivalVoyageNumber;
  @Deprecated public java.lang.CharSequence ComplianceReceiverPort;
  @Deprecated public java.lang.CharSequence MRNCustomsNumber;
  @Deprecated public java.lang.CharSequence DepartureVoyageNumber;
  @Deprecated public java.lang.CharSequence DischargePort;
  @Deprecated public java.lang.CharSequence ComplianceStatus;
  @Deprecated public java.lang.CharSequence ComplianceLoadStatus;
  @Deprecated public java.lang.CharSequence CustomsResponseReason;
  @Deprecated public java.lang.CharSequence SentTimeStamp;
  @Deprecated public java.lang.CharSequence EntryPortETA;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoadStatus() {}

  /**
   * All-args constructor.
   * @param TransportDocumentNumber The new value for TransportDocumentNumber
   * @param VesselCode The new value for VesselCode
   * @param ArrivalVoyageNumber The new value for ArrivalVoyageNumber
   * @param ComplianceReceiverPort The new value for ComplianceReceiverPort
   * @param MRNCustomsNumber The new value for MRNCustomsNumber
   * @param DepartureVoyageNumber The new value for DepartureVoyageNumber
   * @param DischargePort The new value for DischargePort
   * @param ComplianceStatus The new value for ComplianceStatus
   * @param ComplianceLoadStatus The new value for ComplianceLoadStatus
   * @param CustomsResponseReason The new value for CustomsResponseReason
   * @param SentTimeStamp The new value for SentTimeStamp
   * @param EntryPortETA The new value for EntryPortETA
   */
  public LoadStatus(java.lang.CharSequence TransportDocumentNumber, java.lang.CharSequence VesselCode, java.lang.CharSequence ArrivalVoyageNumber, java.lang.CharSequence ComplianceReceiverPort, java.lang.CharSequence MRNCustomsNumber, java.lang.CharSequence DepartureVoyageNumber, java.lang.CharSequence DischargePort, java.lang.CharSequence ComplianceStatus, java.lang.CharSequence ComplianceLoadStatus, java.lang.CharSequence CustomsResponseReason, java.lang.CharSequence SentTimeStamp, java.lang.CharSequence EntryPortETA) {
    this.TransportDocumentNumber = TransportDocumentNumber;
    this.VesselCode = VesselCode;
    this.ArrivalVoyageNumber = ArrivalVoyageNumber;
    this.ComplianceReceiverPort = ComplianceReceiverPort;
    this.MRNCustomsNumber = MRNCustomsNumber;
    this.DepartureVoyageNumber = DepartureVoyageNumber;
    this.DischargePort = DischargePort;
    this.ComplianceStatus = ComplianceStatus;
    this.ComplianceLoadStatus = ComplianceLoadStatus;
    this.CustomsResponseReason = CustomsResponseReason;
    this.SentTimeStamp = SentTimeStamp;
    this.EntryPortETA = EntryPortETA;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return TransportDocumentNumber;
    case 1: return VesselCode;
    case 2: return ArrivalVoyageNumber;
    case 3: return ComplianceReceiverPort;
    case 4: return MRNCustomsNumber;
    case 5: return DepartureVoyageNumber;
    case 6: return DischargePort;
    case 7: return ComplianceStatus;
    case 8: return ComplianceLoadStatus;
    case 9: return CustomsResponseReason;
    case 10: return SentTimeStamp;
    case 11: return EntryPortETA;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: TransportDocumentNumber = (java.lang.CharSequence)value$; break;
    case 1: VesselCode = (java.lang.CharSequence)value$; break;
    case 2: ArrivalVoyageNumber = (java.lang.CharSequence)value$; break;
    case 3: ComplianceReceiverPort = (java.lang.CharSequence)value$; break;
    case 4: MRNCustomsNumber = (java.lang.CharSequence)value$; break;
    case 5: DepartureVoyageNumber = (java.lang.CharSequence)value$; break;
    case 6: DischargePort = (java.lang.CharSequence)value$; break;
    case 7: ComplianceStatus = (java.lang.CharSequence)value$; break;
    case 8: ComplianceLoadStatus = (java.lang.CharSequence)value$; break;
    case 9: CustomsResponseReason = (java.lang.CharSequence)value$; break;
    case 10: SentTimeStamp = (java.lang.CharSequence)value$; break;
    case 11: EntryPortETA = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'TransportDocumentNumber' field.
   * @return The value of the 'TransportDocumentNumber' field.
   */
  public java.lang.CharSequence getTransportDocumentNumber() {
    return TransportDocumentNumber;
  }


  /**
   * Sets the value of the 'TransportDocumentNumber' field.
   * @param value the value to set.
   */
  public void setTransportDocumentNumber(java.lang.CharSequence value) {
    this.TransportDocumentNumber = value;
  }

  /**
   * Gets the value of the 'VesselCode' field.
   * @return The value of the 'VesselCode' field.
   */
  public java.lang.CharSequence getVesselCode() {
    return VesselCode;
  }


  /**
   * Sets the value of the 'VesselCode' field.
   * @param value the value to set.
   */
  public void setVesselCode(java.lang.CharSequence value) {
    this.VesselCode = value;
  }

  /**
   * Gets the value of the 'ArrivalVoyageNumber' field.
   * @return The value of the 'ArrivalVoyageNumber' field.
   */
  public java.lang.CharSequence getArrivalVoyageNumber() {
    return ArrivalVoyageNumber;
  }


  /**
   * Sets the value of the 'ArrivalVoyageNumber' field.
   * @param value the value to set.
   */
  public void setArrivalVoyageNumber(java.lang.CharSequence value) {
    this.ArrivalVoyageNumber = value;
  }

  /**
   * Gets the value of the 'ComplianceReceiverPort' field.
   * @return The value of the 'ComplianceReceiverPort' field.
   */
  public java.lang.CharSequence getComplianceReceiverPort() {
    return ComplianceReceiverPort;
  }


  /**
   * Sets the value of the 'ComplianceReceiverPort' field.
   * @param value the value to set.
   */
  public void setComplianceReceiverPort(java.lang.CharSequence value) {
    this.ComplianceReceiverPort = value;
  }

  /**
   * Gets the value of the 'MRNCustomsNumber' field.
   * @return The value of the 'MRNCustomsNumber' field.
   */
  public java.lang.CharSequence getMRNCustomsNumber() {
    return MRNCustomsNumber;
  }


  /**
   * Sets the value of the 'MRNCustomsNumber' field.
   * @param value the value to set.
   */
  public void setMRNCustomsNumber(java.lang.CharSequence value) {
    this.MRNCustomsNumber = value;
  }

  /**
   * Gets the value of the 'DepartureVoyageNumber' field.
   * @return The value of the 'DepartureVoyageNumber' field.
   */
  public java.lang.CharSequence getDepartureVoyageNumber() {
    return DepartureVoyageNumber;
  }


  /**
   * Sets the value of the 'DepartureVoyageNumber' field.
   * @param value the value to set.
   */
  public void setDepartureVoyageNumber(java.lang.CharSequence value) {
    this.DepartureVoyageNumber = value;
  }

  /**
   * Gets the value of the 'DischargePort' field.
   * @return The value of the 'DischargePort' field.
   */
  public java.lang.CharSequence getDischargePort() {
    return DischargePort;
  }


  /**
   * Sets the value of the 'DischargePort' field.
   * @param value the value to set.
   */
  public void setDischargePort(java.lang.CharSequence value) {
    this.DischargePort = value;
  }

  /**
   * Gets the value of the 'ComplianceStatus' field.
   * @return The value of the 'ComplianceStatus' field.
   */
  public java.lang.CharSequence getComplianceStatus() {
    return ComplianceStatus;
  }


  /**
   * Sets the value of the 'ComplianceStatus' field.
   * @param value the value to set.
   */
  public void setComplianceStatus(java.lang.CharSequence value) {
    this.ComplianceStatus = value;
  }

  /**
   * Gets the value of the 'ComplianceLoadStatus' field.
   * @return The value of the 'ComplianceLoadStatus' field.
   */
  public java.lang.CharSequence getComplianceLoadStatus() {
    return ComplianceLoadStatus;
  }


  /**
   * Sets the value of the 'ComplianceLoadStatus' field.
   * @param value the value to set.
   */
  public void setComplianceLoadStatus(java.lang.CharSequence value) {
    this.ComplianceLoadStatus = value;
  }

  /**
   * Gets the value of the 'CustomsResponseReason' field.
   * @return The value of the 'CustomsResponseReason' field.
   */
  public java.lang.CharSequence getCustomsResponseReason() {
    return CustomsResponseReason;
  }


  /**
   * Sets the value of the 'CustomsResponseReason' field.
   * @param value the value to set.
   */
  public void setCustomsResponseReason(java.lang.CharSequence value) {
    this.CustomsResponseReason = value;
  }

  /**
   * Gets the value of the 'SentTimeStamp' field.
   * @return The value of the 'SentTimeStamp' field.
   */
  public java.lang.CharSequence getSentTimeStamp() {
    return SentTimeStamp;
  }


  /**
   * Sets the value of the 'SentTimeStamp' field.
   * @param value the value to set.
   */
  public void setSentTimeStamp(java.lang.CharSequence value) {
    this.SentTimeStamp = value;
  }

  /**
   * Gets the value of the 'EntryPortETA' field.
   * @return The value of the 'EntryPortETA' field.
   */
  public java.lang.CharSequence getEntryPortETA() {
    return EntryPortETA;
  }


  /**
   * Sets the value of the 'EntryPortETA' field.
   * @param value the value to set.
   */
  public void setEntryPortETA(java.lang.CharSequence value) {
    this.EntryPortETA = value;
  }

  /**
   * Creates a new LoadStatus RecordBuilder.
   * @return A new LoadStatus RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder newBuilder() {
    return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder();
  }

  /**
   * Creates a new LoadStatus RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoadStatus RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder(other);
    }
  }

  /**
   * Creates a new LoadStatus RecordBuilder by copying an existing LoadStatus instance.
   * @param other The existing instance to copy.
   * @return A new LoadStatus RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoadStatus instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoadStatus>
    implements org.apache.avro.data.RecordBuilder<LoadStatus> {

    private java.lang.CharSequence TransportDocumentNumber;
    private java.lang.CharSequence VesselCode;
    private java.lang.CharSequence ArrivalVoyageNumber;
    private java.lang.CharSequence ComplianceReceiverPort;
    private java.lang.CharSequence MRNCustomsNumber;
    private java.lang.CharSequence DepartureVoyageNumber;
    private java.lang.CharSequence DischargePort;
    private java.lang.CharSequence ComplianceStatus;
    private java.lang.CharSequence ComplianceLoadStatus;
    private java.lang.CharSequence CustomsResponseReason;
    private java.lang.CharSequence SentTimeStamp;
    private java.lang.CharSequence EntryPortETA;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.TransportDocumentNumber)) {
        this.TransportDocumentNumber = data().deepCopy(fields()[0].schema(), other.TransportDocumentNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.VesselCode)) {
        this.VesselCode = data().deepCopy(fields()[1].schema(), other.VesselCode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ArrivalVoyageNumber)) {
        this.ArrivalVoyageNumber = data().deepCopy(fields()[2].schema(), other.ArrivalVoyageNumber);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.ComplianceReceiverPort)) {
        this.ComplianceReceiverPort = data().deepCopy(fields()[3].schema(), other.ComplianceReceiverPort);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.MRNCustomsNumber)) {
        this.MRNCustomsNumber = data().deepCopy(fields()[4].schema(), other.MRNCustomsNumber);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.DepartureVoyageNumber)) {
        this.DepartureVoyageNumber = data().deepCopy(fields()[5].schema(), other.DepartureVoyageNumber);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.DischargePort)) {
        this.DischargePort = data().deepCopy(fields()[6].schema(), other.DischargePort);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.ComplianceStatus)) {
        this.ComplianceStatus = data().deepCopy(fields()[7].schema(), other.ComplianceStatus);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.ComplianceLoadStatus)) {
        this.ComplianceLoadStatus = data().deepCopy(fields()[8].schema(), other.ComplianceLoadStatus);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.CustomsResponseReason)) {
        this.CustomsResponseReason = data().deepCopy(fields()[9].schema(), other.CustomsResponseReason);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.SentTimeStamp)) {
        this.SentTimeStamp = data().deepCopy(fields()[10].schema(), other.SentTimeStamp);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.EntryPortETA)) {
        this.EntryPortETA = data().deepCopy(fields()[11].schema(), other.EntryPortETA);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing LoadStatus instance
     * @param other The existing instance to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.TransportDocumentNumber)) {
        this.TransportDocumentNumber = data().deepCopy(fields()[0].schema(), other.TransportDocumentNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.VesselCode)) {
        this.VesselCode = data().deepCopy(fields()[1].schema(), other.VesselCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ArrivalVoyageNumber)) {
        this.ArrivalVoyageNumber = data().deepCopy(fields()[2].schema(), other.ArrivalVoyageNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ComplianceReceiverPort)) {
        this.ComplianceReceiverPort = data().deepCopy(fields()[3].schema(), other.ComplianceReceiverPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.MRNCustomsNumber)) {
        this.MRNCustomsNumber = data().deepCopy(fields()[4].schema(), other.MRNCustomsNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.DepartureVoyageNumber)) {
        this.DepartureVoyageNumber = data().deepCopy(fields()[5].schema(), other.DepartureVoyageNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.DischargePort)) {
        this.DischargePort = data().deepCopy(fields()[6].schema(), other.DischargePort);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ComplianceStatus)) {
        this.ComplianceStatus = data().deepCopy(fields()[7].schema(), other.ComplianceStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ComplianceLoadStatus)) {
        this.ComplianceLoadStatus = data().deepCopy(fields()[8].schema(), other.ComplianceLoadStatus);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.CustomsResponseReason)) {
        this.CustomsResponseReason = data().deepCopy(fields()[9].schema(), other.CustomsResponseReason);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.SentTimeStamp)) {
        this.SentTimeStamp = data().deepCopy(fields()[10].schema(), other.SentTimeStamp);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.EntryPortETA)) {
        this.EntryPortETA = data().deepCopy(fields()[11].schema(), other.EntryPortETA);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'TransportDocumentNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransportDocumentNumber() {
      return TransportDocumentNumber;
    }


    /**
      * Sets the value of the 'TransportDocumentNumber' field.
      * @param value The value of 'TransportDocumentNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setTransportDocumentNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.TransportDocumentNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'TransportDocumentNumber' field has been set.
      * @return True if the 'TransportDocumentNumber' field has been set, false otherwise.
      */
    public boolean hasTransportDocumentNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'TransportDocumentNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearTransportDocumentNumber() {
      TransportDocumentNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'VesselCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getVesselCode() {
      return VesselCode;
    }


    /**
      * Sets the value of the 'VesselCode' field.
      * @param value The value of 'VesselCode'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setVesselCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.VesselCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'VesselCode' field has been set.
      * @return True if the 'VesselCode' field has been set, false otherwise.
      */
    public boolean hasVesselCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'VesselCode' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearVesselCode() {
      VesselCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ArrivalVoyageNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getArrivalVoyageNumber() {
      return ArrivalVoyageNumber;
    }


    /**
      * Sets the value of the 'ArrivalVoyageNumber' field.
      * @param value The value of 'ArrivalVoyageNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setArrivalVoyageNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ArrivalVoyageNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ArrivalVoyageNumber' field has been set.
      * @return True if the 'ArrivalVoyageNumber' field has been set, false otherwise.
      */
    public boolean hasArrivalVoyageNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ArrivalVoyageNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearArrivalVoyageNumber() {
      ArrivalVoyageNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ComplianceReceiverPort' field.
      * @return The value.
      */
    public java.lang.CharSequence getComplianceReceiverPort() {
      return ComplianceReceiverPort;
    }


    /**
      * Sets the value of the 'ComplianceReceiverPort' field.
      * @param value The value of 'ComplianceReceiverPort'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setComplianceReceiverPort(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.ComplianceReceiverPort = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ComplianceReceiverPort' field has been set.
      * @return True if the 'ComplianceReceiverPort' field has been set, false otherwise.
      */
    public boolean hasComplianceReceiverPort() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ComplianceReceiverPort' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearComplianceReceiverPort() {
      ComplianceReceiverPort = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'MRNCustomsNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getMRNCustomsNumber() {
      return MRNCustomsNumber;
    }


    /**
      * Sets the value of the 'MRNCustomsNumber' field.
      * @param value The value of 'MRNCustomsNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setMRNCustomsNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.MRNCustomsNumber = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'MRNCustomsNumber' field has been set.
      * @return True if the 'MRNCustomsNumber' field has been set, false otherwise.
      */
    public boolean hasMRNCustomsNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'MRNCustomsNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearMRNCustomsNumber() {
      MRNCustomsNumber = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'DepartureVoyageNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepartureVoyageNumber() {
      return DepartureVoyageNumber;
    }


    /**
      * Sets the value of the 'DepartureVoyageNumber' field.
      * @param value The value of 'DepartureVoyageNumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setDepartureVoyageNumber(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.DepartureVoyageNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'DepartureVoyageNumber' field has been set.
      * @return True if the 'DepartureVoyageNumber' field has been set, false otherwise.
      */
    public boolean hasDepartureVoyageNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'DepartureVoyageNumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearDepartureVoyageNumber() {
      DepartureVoyageNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'DischargePort' field.
      * @return The value.
      */
    public java.lang.CharSequence getDischargePort() {
      return DischargePort;
    }


    /**
      * Sets the value of the 'DischargePort' field.
      * @param value The value of 'DischargePort'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setDischargePort(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.DischargePort = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'DischargePort' field has been set.
      * @return True if the 'DischargePort' field has been set, false otherwise.
      */
    public boolean hasDischargePort() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'DischargePort' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearDischargePort() {
      DischargePort = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'ComplianceStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getComplianceStatus() {
      return ComplianceStatus;
    }


    /**
      * Sets the value of the 'ComplianceStatus' field.
      * @param value The value of 'ComplianceStatus'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setComplianceStatus(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.ComplianceStatus = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'ComplianceStatus' field has been set.
      * @return True if the 'ComplianceStatus' field has been set, false otherwise.
      */
    public boolean hasComplianceStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'ComplianceStatus' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearComplianceStatus() {
      ComplianceStatus = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ComplianceLoadStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getComplianceLoadStatus() {
      return ComplianceLoadStatus;
    }


    /**
      * Sets the value of the 'ComplianceLoadStatus' field.
      * @param value The value of 'ComplianceLoadStatus'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setComplianceLoadStatus(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.ComplianceLoadStatus = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ComplianceLoadStatus' field has been set.
      * @return True if the 'ComplianceLoadStatus' field has been set, false otherwise.
      */
    public boolean hasComplianceLoadStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ComplianceLoadStatus' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearComplianceLoadStatus() {
      ComplianceLoadStatus = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'CustomsResponseReason' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomsResponseReason() {
      return CustomsResponseReason;
    }


    /**
      * Sets the value of the 'CustomsResponseReason' field.
      * @param value The value of 'CustomsResponseReason'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setCustomsResponseReason(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.CustomsResponseReason = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'CustomsResponseReason' field has been set.
      * @return True if the 'CustomsResponseReason' field has been set, false otherwise.
      */
    public boolean hasCustomsResponseReason() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'CustomsResponseReason' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearCustomsResponseReason() {
      CustomsResponseReason = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'SentTimeStamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getSentTimeStamp() {
      return SentTimeStamp;
    }


    /**
      * Sets the value of the 'SentTimeStamp' field.
      * @param value The value of 'SentTimeStamp'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setSentTimeStamp(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.SentTimeStamp = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'SentTimeStamp' field has been set.
      * @return True if the 'SentTimeStamp' field has been set, false otherwise.
      */
    public boolean hasSentTimeStamp() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'SentTimeStamp' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearSentTimeStamp() {
      SentTimeStamp = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'EntryPortETA' field.
      * @return The value.
      */
    public java.lang.CharSequence getEntryPortETA() {
      return EntryPortETA;
    }


    /**
      * Sets the value of the 'EntryPortETA' field.
      * @param value The value of 'EntryPortETA'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder setEntryPortETA(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.EntryPortETA = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'EntryPortETA' field has been set.
      * @return True if the 'EntryPortETA' field has been set, false otherwise.
      */
    public boolean hasEntryPortETA() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'EntryPortETA' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.LoadStatus.Builder clearEntryPortETA() {
      EntryPortETA = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoadStatus build() {
      try {
        LoadStatus record = new LoadStatus();
        record.TransportDocumentNumber = fieldSetFlags()[0] ? this.TransportDocumentNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.VesselCode = fieldSetFlags()[1] ? this.VesselCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ArrivalVoyageNumber = fieldSetFlags()[2] ? this.ArrivalVoyageNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.ComplianceReceiverPort = fieldSetFlags()[3] ? this.ComplianceReceiverPort : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.MRNCustomsNumber = fieldSetFlags()[4] ? this.MRNCustomsNumber : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.DepartureVoyageNumber = fieldSetFlags()[5] ? this.DepartureVoyageNumber : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.DischargePort = fieldSetFlags()[6] ? this.DischargePort : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.ComplianceStatus = fieldSetFlags()[7] ? this.ComplianceStatus : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.ComplianceLoadStatus = fieldSetFlags()[8] ? this.ComplianceLoadStatus : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.CustomsResponseReason = fieldSetFlags()[9] ? this.CustomsResponseReason : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.SentTimeStamp = fieldSetFlags()[10] ? this.SentTimeStamp : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.EntryPortETA = fieldSetFlags()[11] ? this.EntryPortETA : (java.lang.CharSequence) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoadStatus>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoadStatus>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoadStatus>
    READER$ = (org.apache.avro.io.DatumReader<LoadStatus>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.TransportDocumentNumber);

    out.writeString(this.VesselCode);

    out.writeString(this.ArrivalVoyageNumber);

    out.writeString(this.ComplianceReceiverPort);

    out.writeString(this.MRNCustomsNumber);

    out.writeString(this.DepartureVoyageNumber);

    out.writeString(this.DischargePort);

    out.writeString(this.ComplianceStatus);

    out.writeString(this.ComplianceLoadStatus);

    out.writeString(this.CustomsResponseReason);

    out.writeString(this.SentTimeStamp);

    out.writeString(this.EntryPortETA);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.TransportDocumentNumber = in.readString(this.TransportDocumentNumber instanceof Utf8 ? (Utf8)this.TransportDocumentNumber : null);

      this.VesselCode = in.readString(this.VesselCode instanceof Utf8 ? (Utf8)this.VesselCode : null);

      this.ArrivalVoyageNumber = in.readString(this.ArrivalVoyageNumber instanceof Utf8 ? (Utf8)this.ArrivalVoyageNumber : null);

      this.ComplianceReceiverPort = in.readString(this.ComplianceReceiverPort instanceof Utf8 ? (Utf8)this.ComplianceReceiverPort : null);

      this.MRNCustomsNumber = in.readString(this.MRNCustomsNumber instanceof Utf8 ? (Utf8)this.MRNCustomsNumber : null);

      this.DepartureVoyageNumber = in.readString(this.DepartureVoyageNumber instanceof Utf8 ? (Utf8)this.DepartureVoyageNumber : null);

      this.DischargePort = in.readString(this.DischargePort instanceof Utf8 ? (Utf8)this.DischargePort : null);

      this.ComplianceStatus = in.readString(this.ComplianceStatus instanceof Utf8 ? (Utf8)this.ComplianceStatus : null);

      this.ComplianceLoadStatus = in.readString(this.ComplianceLoadStatus instanceof Utf8 ? (Utf8)this.ComplianceLoadStatus : null);

      this.CustomsResponseReason = in.readString(this.CustomsResponseReason instanceof Utf8 ? (Utf8)this.CustomsResponseReason : null);

      this.SentTimeStamp = in.readString(this.SentTimeStamp instanceof Utf8 ? (Utf8)this.SentTimeStamp : null);

      this.EntryPortETA = in.readString(this.EntryPortETA instanceof Utf8 ? (Utf8)this.EntryPortETA : null);

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.TransportDocumentNumber = in.readString(this.TransportDocumentNumber instanceof Utf8 ? (Utf8)this.TransportDocumentNumber : null);
          break;

        case 1:
          this.VesselCode = in.readString(this.VesselCode instanceof Utf8 ? (Utf8)this.VesselCode : null);
          break;

        case 2:
          this.ArrivalVoyageNumber = in.readString(this.ArrivalVoyageNumber instanceof Utf8 ? (Utf8)this.ArrivalVoyageNumber : null);
          break;

        case 3:
          this.ComplianceReceiverPort = in.readString(this.ComplianceReceiverPort instanceof Utf8 ? (Utf8)this.ComplianceReceiverPort : null);
          break;

        case 4:
          this.MRNCustomsNumber = in.readString(this.MRNCustomsNumber instanceof Utf8 ? (Utf8)this.MRNCustomsNumber : null);
          break;

        case 5:
          this.DepartureVoyageNumber = in.readString(this.DepartureVoyageNumber instanceof Utf8 ? (Utf8)this.DepartureVoyageNumber : null);
          break;

        case 6:
          this.DischargePort = in.readString(this.DischargePort instanceof Utf8 ? (Utf8)this.DischargePort : null);
          break;

        case 7:
          this.ComplianceStatus = in.readString(this.ComplianceStatus instanceof Utf8 ? (Utf8)this.ComplianceStatus : null);
          break;

        case 8:
          this.ComplianceLoadStatus = in.readString(this.ComplianceLoadStatus instanceof Utf8 ? (Utf8)this.ComplianceLoadStatus : null);
          break;

        case 9:
          this.CustomsResponseReason = in.readString(this.CustomsResponseReason instanceof Utf8 ? (Utf8)this.CustomsResponseReason : null);
          break;

        case 10:
          this.SentTimeStamp = in.readString(this.SentTimeStamp instanceof Utf8 ? (Utf8)this.SentTimeStamp : null);
          break;

        case 11:
          this.EntryPortETA = in.readString(this.EntryPortETA instanceof Utf8 ? (Utf8)this.EntryPortETA : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










