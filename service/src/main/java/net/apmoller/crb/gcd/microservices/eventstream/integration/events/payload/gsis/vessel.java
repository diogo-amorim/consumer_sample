/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class vessel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3595936670014104699L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"vessel\",\"namespace\":\"net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis\",\"fields\":[{\"name\":\"vesselCode\",\"type\":\"string\"},{\"name\":\"IMONumber\",\"type\":\"string\"},{\"name\":\"vesselName\",\"type\":\"string\"},{\"name\":\"vesselOperatorCode\",\"type\":\"string\"},{\"name\":\"vesselFlag\",\"type\":\"string\"},{\"name\":\"vesselCallSign\",\"type\":\"string\"}],\"connect.name\":\"emp.maersk.com.vessel\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<vessel> ENCODER =
      new BinaryMessageEncoder<vessel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<vessel> DECODER =
      new BinaryMessageDecoder<vessel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<vessel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<vessel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<vessel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<vessel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this vessel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a vessel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a vessel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static vessel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence vesselCode;
  @Deprecated public java.lang.CharSequence IMONumber;
  @Deprecated public java.lang.CharSequence vesselName;
  @Deprecated public java.lang.CharSequence vesselOperatorCode;
  @Deprecated public java.lang.CharSequence vesselFlag;
  @Deprecated public java.lang.CharSequence vesselCallSign;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public vessel() {}

  /**
   * All-args constructor.
   * @param vesselCode The new value for vesselCode
   * @param IMONumber The new value for IMONumber
   * @param vesselName The new value for vesselName
   * @param vesselOperatorCode The new value for vesselOperatorCode
   * @param vesselFlag The new value for vesselFlag
   * @param vesselCallSign The new value for vesselCallSign
   */
  public vessel(java.lang.CharSequence vesselCode, java.lang.CharSequence IMONumber, java.lang.CharSequence vesselName, java.lang.CharSequence vesselOperatorCode, java.lang.CharSequence vesselFlag, java.lang.CharSequence vesselCallSign) {
    this.vesselCode = vesselCode;
    this.IMONumber = IMONumber;
    this.vesselName = vesselName;
    this.vesselOperatorCode = vesselOperatorCode;
    this.vesselFlag = vesselFlag;
    this.vesselCallSign = vesselCallSign;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return vesselCode;
    case 1: return IMONumber;
    case 2: return vesselName;
    case 3: return vesselOperatorCode;
    case 4: return vesselFlag;
    case 5: return vesselCallSign;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: vesselCode = (java.lang.CharSequence)value$; break;
    case 1: IMONumber = (java.lang.CharSequence)value$; break;
    case 2: vesselName = (java.lang.CharSequence)value$; break;
    case 3: vesselOperatorCode = (java.lang.CharSequence)value$; break;
    case 4: vesselFlag = (java.lang.CharSequence)value$; break;
    case 5: vesselCallSign = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'vesselCode' field.
   * @return The value of the 'vesselCode' field.
   */
  public java.lang.CharSequence getVesselCode() {
    return vesselCode;
  }


  /**
   * Sets the value of the 'vesselCode' field.
   * @param value the value to set.
   */
  public void setVesselCode(java.lang.CharSequence value) {
    this.vesselCode = value;
  }

  /**
   * Gets the value of the 'IMONumber' field.
   * @return The value of the 'IMONumber' field.
   */
  public java.lang.CharSequence getIMONumber() {
    return IMONumber;
  }


  /**
   * Sets the value of the 'IMONumber' field.
   * @param value the value to set.
   */
  public void setIMONumber(java.lang.CharSequence value) {
    this.IMONumber = value;
  }

  /**
   * Gets the value of the 'vesselName' field.
   * @return The value of the 'vesselName' field.
   */
  public java.lang.CharSequence getVesselName() {
    return vesselName;
  }


  /**
   * Sets the value of the 'vesselName' field.
   * @param value the value to set.
   */
  public void setVesselName(java.lang.CharSequence value) {
    this.vesselName = value;
  }

  /**
   * Gets the value of the 'vesselOperatorCode' field.
   * @return The value of the 'vesselOperatorCode' field.
   */
  public java.lang.CharSequence getVesselOperatorCode() {
    return vesselOperatorCode;
  }


  /**
   * Sets the value of the 'vesselOperatorCode' field.
   * @param value the value to set.
   */
  public void setVesselOperatorCode(java.lang.CharSequence value) {
    this.vesselOperatorCode = value;
  }

  /**
   * Gets the value of the 'vesselFlag' field.
   * @return The value of the 'vesselFlag' field.
   */
  public java.lang.CharSequence getVesselFlag() {
    return vesselFlag;
  }


  /**
   * Sets the value of the 'vesselFlag' field.
   * @param value the value to set.
   */
  public void setVesselFlag(java.lang.CharSequence value) {
    this.vesselFlag = value;
  }

  /**
   * Gets the value of the 'vesselCallSign' field.
   * @return The value of the 'vesselCallSign' field.
   */
  public java.lang.CharSequence getVesselCallSign() {
    return vesselCallSign;
  }


  /**
   * Sets the value of the 'vesselCallSign' field.
   * @param value the value to set.
   */
  public void setVesselCallSign(java.lang.CharSequence value) {
    this.vesselCallSign = value;
  }

  /**
   * Creates a new vessel RecordBuilder.
   * @return A new vessel RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder newBuilder() {
    return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder();
  }

  /**
   * Creates a new vessel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new vessel RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder(other);
    }
  }

  /**
   * Creates a new vessel RecordBuilder by copying an existing vessel instance.
   * @param other The existing instance to copy.
   * @return A new vessel RecordBuilder
   */
  public static net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder newBuilder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel other) {
    if (other == null) {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder();
    } else {
      return new net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder(other);
    }
  }

  /**
   * RecordBuilder for vessel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<vessel>
    implements org.apache.avro.data.RecordBuilder<vessel> {

    private java.lang.CharSequence vesselCode;
    private java.lang.CharSequence IMONumber;
    private java.lang.CharSequence vesselName;
    private java.lang.CharSequence vesselOperatorCode;
    private java.lang.CharSequence vesselFlag;
    private java.lang.CharSequence vesselCallSign;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.vesselCode)) {
        this.vesselCode = data().deepCopy(fields()[0].schema(), other.vesselCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.IMONumber)) {
        this.IMONumber = data().deepCopy(fields()[1].schema(), other.IMONumber);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.vesselName)) {
        this.vesselName = data().deepCopy(fields()[2].schema(), other.vesselName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.vesselOperatorCode)) {
        this.vesselOperatorCode = data().deepCopy(fields()[3].schema(), other.vesselOperatorCode);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.vesselFlag)) {
        this.vesselFlag = data().deepCopy(fields()[4].schema(), other.vesselFlag);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.vesselCallSign)) {
        this.vesselCallSign = data().deepCopy(fields()[5].schema(), other.vesselCallSign);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing vessel instance
     * @param other The existing instance to copy.
     */
    private Builder(net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.vesselCode)) {
        this.vesselCode = data().deepCopy(fields()[0].schema(), other.vesselCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.IMONumber)) {
        this.IMONumber = data().deepCopy(fields()[1].schema(), other.IMONumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vesselName)) {
        this.vesselName = data().deepCopy(fields()[2].schema(), other.vesselName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vesselOperatorCode)) {
        this.vesselOperatorCode = data().deepCopy(fields()[3].schema(), other.vesselOperatorCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vesselFlag)) {
        this.vesselFlag = data().deepCopy(fields()[4].schema(), other.vesselFlag);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vesselCallSign)) {
        this.vesselCallSign = data().deepCopy(fields()[5].schema(), other.vesselCallSign);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'vesselCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getVesselCode() {
      return vesselCode;
    }


    /**
      * Sets the value of the 'vesselCode' field.
      * @param value The value of 'vesselCode'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder setVesselCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.vesselCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'vesselCode' field has been set.
      * @return True if the 'vesselCode' field has been set, false otherwise.
      */
    public boolean hasVesselCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'vesselCode' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder clearVesselCode() {
      vesselCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'IMONumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getIMONumber() {
      return IMONumber;
    }


    /**
      * Sets the value of the 'IMONumber' field.
      * @param value The value of 'IMONumber'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder setIMONumber(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.IMONumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'IMONumber' field has been set.
      * @return True if the 'IMONumber' field has been set, false otherwise.
      */
    public boolean hasIMONumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'IMONumber' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder clearIMONumber() {
      IMONumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'vesselName' field.
      * @return The value.
      */
    public java.lang.CharSequence getVesselName() {
      return vesselName;
    }


    /**
      * Sets the value of the 'vesselName' field.
      * @param value The value of 'vesselName'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder setVesselName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.vesselName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'vesselName' field has been set.
      * @return True if the 'vesselName' field has been set, false otherwise.
      */
    public boolean hasVesselName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'vesselName' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder clearVesselName() {
      vesselName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vesselOperatorCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getVesselOperatorCode() {
      return vesselOperatorCode;
    }


    /**
      * Sets the value of the 'vesselOperatorCode' field.
      * @param value The value of 'vesselOperatorCode'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder setVesselOperatorCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.vesselOperatorCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vesselOperatorCode' field has been set.
      * @return True if the 'vesselOperatorCode' field has been set, false otherwise.
      */
    public boolean hasVesselOperatorCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'vesselOperatorCode' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder clearVesselOperatorCode() {
      vesselOperatorCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'vesselFlag' field.
      * @return The value.
      */
    public java.lang.CharSequence getVesselFlag() {
      return vesselFlag;
    }


    /**
      * Sets the value of the 'vesselFlag' field.
      * @param value The value of 'vesselFlag'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder setVesselFlag(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.vesselFlag = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'vesselFlag' field has been set.
      * @return True if the 'vesselFlag' field has been set, false otherwise.
      */
    public boolean hasVesselFlag() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'vesselFlag' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder clearVesselFlag() {
      vesselFlag = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'vesselCallSign' field.
      * @return The value.
      */
    public java.lang.CharSequence getVesselCallSign() {
      return vesselCallSign;
    }


    /**
      * Sets the value of the 'vesselCallSign' field.
      * @param value The value of 'vesselCallSign'.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder setVesselCallSign(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.vesselCallSign = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'vesselCallSign' field has been set.
      * @return True if the 'vesselCallSign' field has been set, false otherwise.
      */
    public boolean hasVesselCallSign() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'vesselCallSign' field.
      * @return This builder.
      */
    public net.apmoller.crb.gcd.microservices.eventstream.integration.events.payload.gsis.vessel.Builder clearVesselCallSign() {
      vesselCallSign = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public vessel build() {
      try {
        vessel record = new vessel();
        record.vesselCode = fieldSetFlags()[0] ? this.vesselCode : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.IMONumber = fieldSetFlags()[1] ? this.IMONumber : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.vesselName = fieldSetFlags()[2] ? this.vesselName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.vesselOperatorCode = fieldSetFlags()[3] ? this.vesselOperatorCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.vesselFlag = fieldSetFlags()[4] ? this.vesselFlag : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.vesselCallSign = fieldSetFlags()[5] ? this.vesselCallSign : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<vessel>
    WRITER$ = (org.apache.avro.io.DatumWriter<vessel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<vessel>
    READER$ = (org.apache.avro.io.DatumReader<vessel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.vesselCode);

    out.writeString(this.IMONumber);

    out.writeString(this.vesselName);

    out.writeString(this.vesselOperatorCode);

    out.writeString(this.vesselFlag);

    out.writeString(this.vesselCallSign);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.vesselCode = in.readString(this.vesselCode instanceof Utf8 ? (Utf8)this.vesselCode : null);

      this.IMONumber = in.readString(this.IMONumber instanceof Utf8 ? (Utf8)this.IMONumber : null);

      this.vesselName = in.readString(this.vesselName instanceof Utf8 ? (Utf8)this.vesselName : null);

      this.vesselOperatorCode = in.readString(this.vesselOperatorCode instanceof Utf8 ? (Utf8)this.vesselOperatorCode : null);

      this.vesselFlag = in.readString(this.vesselFlag instanceof Utf8 ? (Utf8)this.vesselFlag : null);

      this.vesselCallSign = in.readString(this.vesselCallSign instanceof Utf8 ? (Utf8)this.vesselCallSign : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.vesselCode = in.readString(this.vesselCode instanceof Utf8 ? (Utf8)this.vesselCode : null);
          break;

        case 1:
          this.IMONumber = in.readString(this.IMONumber instanceof Utf8 ? (Utf8)this.IMONumber : null);
          break;

        case 2:
          this.vesselName = in.readString(this.vesselName instanceof Utf8 ? (Utf8)this.vesselName : null);
          break;

        case 3:
          this.vesselOperatorCode = in.readString(this.vesselOperatorCode instanceof Utf8 ? (Utf8)this.vesselOperatorCode : null);
          break;

        case 4:
          this.vesselFlag = in.readString(this.vesselFlag instanceof Utf8 ? (Utf8)this.vesselFlag : null);
          break;

        case 5:
          this.vesselCallSign = in.readString(this.vesselCallSign instanceof Utf8 ? (Utf8)this.vesselCallSign : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










